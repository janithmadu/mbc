"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/typeid-js";
exports.ids = ["vendor-chunks/typeid-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/typeid-js/dist/chunk-4WQUCFGE.mjs":
/*!********************************************************!*\
  !*** ./node_modules/typeid-js/dist/chunk-4WQUCFGE.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n// src/base32.ts\nvar alphabet = \"0123456789abcdefghjkmnpqrstvwxyz\";\nvar dec = new Uint8Array([\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    255,\n    18,\n    19,\n    255,\n    20,\n    21,\n    255,\n    22,\n    23,\n    24,\n    25,\n    26,\n    255,\n    27,\n    28,\n    29,\n    30,\n    31,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255,\n    255\n]);\nfunction encode(src) {\n    const dst = new Array(26).fill(\"\");\n    if (src.length !== 16) {\n        throw new Error(\"Invalid length\");\n    }\n    dst[0] = alphabet[(src[0] & 224) >> 5];\n    dst[1] = alphabet[src[0] & 31];\n    dst[2] = alphabet[(src[1] & 248) >> 3];\n    dst[3] = alphabet[(src[1] & 7) << 2 | (src[2] & 192) >> 6];\n    dst[4] = alphabet[(src[2] & 62) >> 1];\n    dst[5] = alphabet[(src[2] & 1) << 4 | (src[3] & 240) >> 4];\n    dst[6] = alphabet[(src[3] & 15) << 1 | (src[4] & 128) >> 7];\n    dst[7] = alphabet[(src[4] & 124) >> 2];\n    dst[8] = alphabet[(src[4] & 3) << 3 | (src[5] & 224) >> 5];\n    dst[9] = alphabet[src[5] & 31];\n    dst[10] = alphabet[(src[6] & 248) >> 3];\n    dst[11] = alphabet[(src[6] & 7) << 2 | (src[7] & 192) >> 6];\n    dst[12] = alphabet[(src[7] & 62) >> 1];\n    dst[13] = alphabet[(src[7] & 1) << 4 | (src[8] & 240) >> 4];\n    dst[14] = alphabet[(src[8] & 15) << 1 | (src[9] & 128) >> 7];\n    dst[15] = alphabet[(src[9] & 124) >> 2];\n    dst[16] = alphabet[(src[9] & 3) << 3 | (src[10] & 224) >> 5];\n    dst[17] = alphabet[src[10] & 31];\n    dst[18] = alphabet[(src[11] & 248) >> 3];\n    dst[19] = alphabet[(src[11] & 7) << 2 | (src[12] & 192) >> 6];\n    dst[20] = alphabet[(src[12] & 62) >> 1];\n    dst[21] = alphabet[(src[12] & 1) << 4 | (src[13] & 240) >> 4];\n    dst[22] = alphabet[(src[13] & 15) << 1 | (src[14] & 128) >> 7];\n    dst[23] = alphabet[(src[14] & 124) >> 2];\n    dst[24] = alphabet[(src[14] & 3) << 3 | (src[15] & 224) >> 5];\n    dst[25] = alphabet[src[15] & 31];\n    return dst.join(\"\");\n}\nfunction decode(s) {\n    if (s.length !== 26) {\n        throw new Error(\"Invalid length\");\n    }\n    const encoder = new TextEncoder();\n    const v = encoder.encode(s);\n    if (dec[v[0]] === 255 || dec[v[1]] === 255 || dec[v[2]] === 255 || dec[v[3]] === 255 || dec[v[4]] === 255 || dec[v[5]] === 255 || dec[v[6]] === 255 || dec[v[7]] === 255 || dec[v[8]] === 255 || dec[v[9]] === 255 || dec[v[10]] === 255 || dec[v[11]] === 255 || dec[v[12]] === 255 || dec[v[13]] === 255 || dec[v[14]] === 255 || dec[v[15]] === 255 || dec[v[16]] === 255 || dec[v[17]] === 255 || dec[v[18]] === 255 || dec[v[19]] === 255 || dec[v[20]] === 255 || dec[v[21]] === 255 || dec[v[22]] === 255 || dec[v[23]] === 255 || dec[v[24]] === 255 || dec[v[25]] === 255) {\n        throw new Error(\"Invalid base32 character\");\n    }\n    const id = new Uint8Array(16);\n    id[0] = dec[v[0]] << 5 | dec[v[1]];\n    id[1] = dec[v[2]] << 3 | dec[v[3]] >> 2;\n    id[2] = (dec[v[3]] & 3) << 6 | dec[v[4]] << 1 | dec[v[5]] >> 4;\n    id[3] = (dec[v[5]] & 15) << 4 | dec[v[6]] >> 1;\n    id[4] = (dec[v[6]] & 1) << 7 | dec[v[7]] << 2 | dec[v[8]] >> 3;\n    id[5] = (dec[v[8]] & 7) << 5 | dec[v[9]];\n    id[6] = dec[v[10]] << 3 | dec[v[11]] >> 2;\n    id[7] = (dec[v[11]] & 3) << 6 | dec[v[12]] << 1 | dec[v[13]] >> 4;\n    id[8] = (dec[v[13]] & 15) << 4 | dec[v[14]] >> 1;\n    id[9] = (dec[v[14]] & 1) << 7 | dec[v[15]] << 2 | dec[v[16]] >> 3;\n    id[10] = (dec[v[16]] & 7) << 5 | dec[v[17]];\n    id[11] = dec[v[18]] << 3 | dec[v[19]] >> 2;\n    id[12] = (dec[v[19]] & 3) << 6 | dec[v[20]] << 1 | dec[v[21]] >> 4;\n    id[13] = (dec[v[21]] & 15) << 4 | dec[v[22]] >> 1;\n    id[14] = (dec[v[22]] & 1) << 7 | dec[v[23]] << 2 | dec[v[24]] >> 3;\n    id[15] = (dec[v[24]] & 7) << 5 | dec[v[25]];\n    return id;\n}\n //# sourceMappingURL=chunk-4WQUCFGE.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typeid-js/dist/chunk-4WQUCFGE.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/typeid-js/dist/chunk-5QL2QZCM.mjs":
/*!********************************************************!*\
  !*** ./node_modules/typeid-js/dist/chunk-5QL2QZCM.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseUUID: () => (/* binding */ parseUUID)\n/* harmony export */ });\n// src/parse_uuid.ts\nfunction parseUUID(uuid) {\n    let v;\n    const arr = new Uint8Array(16);\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = v >>> 16 & 255;\n    arr[2] = v >>> 8 & 255;\n    arr[3] = v & 255;\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 255;\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 255;\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 255;\n    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;\n    arr[11] = v / 4294967296 & 255;\n    arr[12] = v >>> 24 & 255;\n    arr[13] = v >>> 16 & 255;\n    arr[14] = v >>> 8 & 255;\n    arr[15] = v & 255;\n    return arr;\n}\n //# sourceMappingURL=chunk-5QL2QZCM.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdHlwZWlkLWpzL2Rpc3QvY2h1bmstNVFMMlFaQ00ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsU0FBU0EsVUFBVUMsSUFBSTtJQUNyQixJQUFJQztJQUNKLE1BQU1DLE1BQU0sSUFBSUMsV0FBVztJQUMzQkQsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRCxJQUFJRyxTQUFTSixLQUFLSyxLQUFLLENBQUMsR0FBRyxJQUFJLEdBQUUsTUFBTztJQUNsREgsR0FBRyxDQUFDLEVBQUUsR0FBR0QsTUFBTSxLQUFLO0lBQ3BCQyxHQUFHLENBQUMsRUFBRSxHQUFHRCxNQUFNLElBQUk7SUFDbkJDLEdBQUcsQ0FBQyxFQUFFLEdBQUdELElBQUk7SUFDYkMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRCxJQUFJRyxTQUFTSixLQUFLSyxLQUFLLENBQUMsR0FBRyxLQUFLLEdBQUUsTUFBTztJQUNuREgsR0FBRyxDQUFDLEVBQUUsR0FBR0QsSUFBSTtJQUNiQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUNELElBQUlHLFNBQVNKLEtBQUtLLEtBQUssQ0FBQyxJQUFJLEtBQUssR0FBRSxNQUFPO0lBQ3BESCxHQUFHLENBQUMsRUFBRSxHQUFHRCxJQUFJO0lBQ2JDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0osS0FBS0ssS0FBSyxDQUFDLElBQUksS0FBSyxHQUFFLE1BQU87SUFDcERILEdBQUcsQ0FBQyxFQUFFLEdBQUdELElBQUk7SUFDYkMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDRCxJQUFJRyxTQUFTSixLQUFLSyxLQUFLLENBQUMsSUFBSSxLQUFLLEdBQUUsSUFBSyxnQkFBZ0I7SUFDbkVILEdBQUcsQ0FBQyxHQUFHLEdBQUdELElBQUksYUFBYTtJQUMzQkMsR0FBRyxDQUFDLEdBQUcsR0FBR0QsTUFBTSxLQUFLO0lBQ3JCQyxHQUFHLENBQUMsR0FBRyxHQUFHRCxNQUFNLEtBQUs7SUFDckJDLEdBQUcsQ0FBQyxHQUFHLEdBQUdELE1BQU0sSUFBSTtJQUNwQkMsR0FBRyxDQUFDLEdBQUcsR0FBR0QsSUFBSTtJQUNkLE9BQU9DO0FBQ1Q7QUFJRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL21iYy8uL25vZGVfbW9kdWxlcy90eXBlaWQtanMvZGlzdC9jaHVuay01UUwyUVpDTS5tanM/NzE5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvcGFyc2VfdXVpZC50c1xuZnVuY3Rpb24gcGFyc2VVVUlEKHV1aWQpIHtcbiAgbGV0IHY7XG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTtcbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAyNTU7XG4gIGFyclsyXSA9IHYgPj4+IDggJiAyNTU7XG4gIGFyclszXSA9IHYgJiAyNTU7XG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAyNTU7XG4gIGFycls2XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxNCwgMTgpLCAxNikpID4+PiA4O1xuICBhcnJbN10gPSB2ICYgMjU1O1xuICBhcnJbOF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTksIDIzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzldID0gdiAmIDI1NTtcbiAgYXJyWzEwXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgyNCwgMzYpLCAxNikpIC8gMTA5OTUxMTYyNzc3NiAmIDI1NTtcbiAgYXJyWzExXSA9IHYgLyA0Mjk0OTY3Mjk2ICYgMjU1O1xuICBhcnJbMTJdID0gdiA+Pj4gMjQgJiAyNTU7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDI1NTtcbiAgYXJyWzE0XSA9IHYgPj4+IDggJiAyNTU7XG4gIGFyclsxNV0gPSB2ICYgMjU1O1xuICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQge1xuICBwYXJzZVVVSURcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay01UUwyUVpDTS5tanMubWFwIl0sIm5hbWVzIjpbInBhcnNlVVVJRCIsInV1aWQiLCJ2IiwiYXJyIiwiVWludDhBcnJheSIsInBhcnNlSW50Iiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typeid-js/dist/chunk-5QL2QZCM.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/typeid-js/dist/chunk-FOHWUNKU.mjs":
/*!********************************************************!*\
  !*** ./node_modules/typeid-js/dist/chunk-FOHWUNKU.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeID: () => (/* binding */ TypeID),\n/* harmony export */   typeid: () => (/* binding */ typeid)\n/* harmony export */ });\n/* harmony import */ var _chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-4WQUCFGE.mjs */ \"(ssr)/./node_modules/typeid-js/dist/chunk-4WQUCFGE.mjs\");\n/* harmony import */ var _chunk_5QL2QZCM_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-5QL2QZCM.mjs */ \"(ssr)/./node_modules/typeid-js/dist/chunk-5QL2QZCM.mjs\");\n/* harmony import */ var _chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-R5Q6Z3GN.mjs */ \"(ssr)/./node_modules/typeid-js/dist/chunk-R5Q6Z3GN.mjs\");\n\n\n\n// node_modules/.pnpm/uuidv7@0.4.4/node_modules/uuidv7/dist/index.js\nvar DIGITS = \"0123456789abcdef\";\nvar UUID = class {\n    /** @param bytes - The 16-byte byte array representation. */ constructor(bytes){\n        this.bytes = bytes;\n        if (bytes.length !== 16) {\n            throw new TypeError(\"not 128-bit length\");\n        }\n    }\n    /**\n   * Builds a byte array from UUIDv7 field values.\n   *\n   * @param unixTsMs - A 48-bit `unix_ts_ms` field value.\n   * @param randA - A 12-bit `rand_a` field value.\n   * @param randBHi - The higher 30 bits of 62-bit `rand_b` field value.\n   * @param randBLo - The lower 32 bits of 62-bit `rand_b` field value.\n   */ static fromFieldsV7(unixTsMs, randA, randBHi, randBLo) {\n        if (!Number.isInteger(unixTsMs) || !Number.isInteger(randA) || !Number.isInteger(randBHi) || !Number.isInteger(randBLo) || unixTsMs < 0 || randA < 0 || randBHi < 0 || randBLo < 0 || unixTsMs > 281474976710655 || randA > 4095 || randBHi > 1073741823 || randBLo > 4294967295) {\n            throw new RangeError(\"invalid field value\");\n        }\n        const bytes = new Uint8Array(16);\n        bytes[0] = unixTsMs / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 40);\n        bytes[1] = unixTsMs / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 32);\n        bytes[2] = unixTsMs / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 24);\n        bytes[3] = unixTsMs / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 16);\n        bytes[4] = unixTsMs / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 8);\n        bytes[5] = unixTsMs;\n        bytes[6] = 112 | randA >>> 8;\n        bytes[7] = randA;\n        bytes[8] = 128 | randBHi >>> 24;\n        bytes[9] = randBHi >>> 16;\n        bytes[10] = randBHi >>> 8;\n        bytes[11] = randBHi;\n        bytes[12] = randBLo >>> 24;\n        bytes[13] = randBLo >>> 16;\n        bytes[14] = randBLo >>> 8;\n        bytes[15] = randBLo;\n        return new UUID(bytes);\n    }\n    /** @returns The 8-4-4-4-12 canonical hexadecimal string representation. */ toString() {\n        let text = \"\";\n        for(let i = 0; i < this.bytes.length; i++){\n            text += DIGITS.charAt(this.bytes[i] >>> 4);\n            text += DIGITS.charAt(this.bytes[i] & 15);\n            if (i === 3 || i === 5 || i === 7 || i === 9) {\n                text += \"-\";\n            }\n        }\n        return text;\n    }\n    /** Creates an object from `this`. */ clone() {\n        return new UUID(this.bytes.slice(0));\n    }\n    /** Returns true if `this` is equivalent to `other`. */ equals(other) {\n        return this.compareTo(other) === 0;\n    }\n    /**\n   * Returns a negative integer, zero, or positive integer if `this` is less\n   * than, equal to, or greater than `other`, respectively.\n   */ compareTo(other) {\n        for(let i = 0; i < 16; i++){\n            const diff = this.bytes[i] - other.bytes[i];\n            if (diff !== 0) {\n                return Math.sign(diff);\n            }\n        }\n        return 0;\n    }\n};\nvar V7Generator = class {\n    constructor(){\n        this.timestamp = 0;\n        this.counter = 0;\n        this.random = new DefaultRandom();\n    }\n    /**\n   * Generates a new UUIDv7 object from the current timestamp, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method returns monotonically increasing UUIDs unless the up-to-date\n   * timestamp is significantly (by ten seconds or more) smaller than the one\n   * embedded in the immediately preceding UUID. If such a significant clock\n   * rollback is detected, this method resets the generator and returns a new\n   * UUID based on the current timestamp.\n   */ generate() {\n        const value = this.generateOrAbort();\n        if (value !== void 0) {\n            return value;\n        } else {\n            this.timestamp = 0;\n            return this.generateOrAbort();\n        }\n    }\n    /**\n   * Generates a new UUIDv7 object from the current timestamp, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method returns monotonically increasing UUIDs unless the up-to-date\n   * timestamp is significantly (by ten seconds or more) smaller than the one\n   * embedded in the immediately preceding UUID. If such a significant clock\n   * rollback is detected, this method aborts and returns `undefined`.\n   */ generateOrAbort() {\n        const MAX_COUNTER = 4398046511103;\n        const ROLLBACK_ALLOWANCE = 1e4;\n        const ts = Date.now();\n        if (ts > this.timestamp) {\n            this.timestamp = ts;\n            this.resetCounter();\n        } else if (ts + ROLLBACK_ALLOWANCE > this.timestamp) {\n            this.counter++;\n            if (this.counter > MAX_COUNTER) {\n                this.timestamp++;\n                this.resetCounter();\n            }\n        } else {\n            return void 0;\n        }\n        return UUID.fromFieldsV7(this.timestamp, Math.trunc(this.counter / (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 30)), this.counter & (0,_chunk_R5Q6Z3GN_mjs__WEBPACK_IMPORTED_MODULE_0__.__pow)(2, 30) - 1, this.random.nextUint32());\n    }\n    /** Initializes the counter at a 42-bit random integer. */ resetCounter() {\n        this.counter = this.random.nextUint32() * 1024 + (this.random.nextUint32() & 1023);\n    }\n};\nvar getRandomValues = (buffer)=>{\n    if (typeof UUIDV7_DENY_WEAK_RNG !== \"undefined\" && UUIDV7_DENY_WEAK_RNG) {\n        throw new Error(\"no cryptographically strong RNG available\");\n    }\n    for(let i = 0; i < buffer.length; i++){\n        buffer[i] = Math.trunc(Math.random() * 65536) * 65536 + Math.trunc(Math.random() * 65536);\n    }\n    return buffer;\n};\nif (typeof crypto !== \"undefined\" && crypto.getRandomValues) {\n    getRandomValues = (buffer)=>crypto.getRandomValues(buffer);\n}\nvar DefaultRandom = class {\n    constructor(){\n        this.buffer = new Uint32Array(8);\n        this.cursor = 99;\n    }\n    nextUint32() {\n        if (this.cursor >= this.buffer.length) {\n            getRandomValues(this.buffer);\n            this.cursor = 0;\n        }\n        return this.buffer[this.cursor++];\n    }\n};\nvar defaultGenerator;\nvar uuidv7obj = ()=>(defaultGenerator || (defaultGenerator = new V7Generator())).generate();\n// src/typeid.ts\nfunction isValidPrefix(str) {\n    if (str.length > 63) {\n        return false;\n    }\n    let code;\n    let i;\n    let len;\n    for(i = 0, len = str.length; i < len; i += 1){\n        code = str.charCodeAt(i);\n        if (!(code > 96 && code < 123)) {\n            return false;\n        }\n    }\n    return true;\n}\nvar TypeID = class {\n    constructor(prefix, suffix = \"\"){\n        this.prefix = prefix;\n        this.suffix = suffix;\n        if (!isValidPrefix(prefix)) {\n            throw new Error(\"Invalid prefix. Must be at most 63 ascii letters [a-z]\");\n        }\n        this.prefix = prefix;\n        if (suffix) {\n            this.suffix = suffix;\n        } else {\n            const uuid = uuidv7obj();\n            this.suffix = (0,_chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__.encode)(uuid.bytes);\n        }\n        if (this.suffix.length !== 26) {\n            throw new Error(`Invalid length. Suffix should have 26 characters, got ${suffix.length}`);\n        }\n        if (this.suffix[0] > \"7\") {\n            throw new Error(\"Invalid suffix. First character must be in the range [0-7]\");\n        }\n        const unused = (0,_chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__.decode)(this.suffix);\n    }\n    getType() {\n        return this.prefix;\n    }\n    getSuffix() {\n        return this.suffix;\n    }\n    asType(prefix) {\n        const self = this;\n        if (self.prefix !== prefix) {\n            throw new Error(`Cannot convert TypeID of type ${self.prefix} to type ${prefix}`);\n        }\n        return self;\n    }\n    toUUIDBytes() {\n        return (0,_chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__.decode)(this.suffix);\n    }\n    toUUID() {\n        const uuid = new UUID(this.toUUIDBytes());\n        return uuid.toString();\n    }\n    toString() {\n        if (this.prefix === \"\") {\n            return this.suffix;\n        }\n        return `${this.prefix}_${this.suffix}`;\n    }\n    static fromString(str) {\n        const parts = str.split(\"_\");\n        if (parts.length === 1) {\n            return new TypeID(\"\", parts[0]);\n        }\n        if (parts.length === 2) {\n            if (parts[0] === \"\") {\n                throw new Error(`Invalid TypeID. Prefix cannot be empty when there's a separator: ${str}`);\n            }\n            return new TypeID(parts[0], parts[1]);\n        }\n        throw new Error(`Invalid TypeID string: ${str}`);\n    }\n    static fromUUIDBytes(prefix, bytes) {\n        const suffix = (0,_chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__.encode)(bytes);\n        return new TypeID(prefix, suffix);\n    }\n    static fromUUID(prefix, uuid) {\n        const suffix = (0,_chunk_4WQUCFGE_mjs__WEBPACK_IMPORTED_MODULE_1__.encode)((0,_chunk_5QL2QZCM_mjs__WEBPACK_IMPORTED_MODULE_2__.parseUUID)(uuid));\n        return new TypeID(prefix, suffix);\n    }\n};\nfunction typeid(prefix = \"\", suffix = \"\") {\n    return new TypeID(prefix, suffix);\n}\n /*! Bundled license information:\n\nuuidv7/dist/index.js:\n  (**\n   * uuidv7: An experimental implementation of the proposed UUID Version 7\n   *\n   * @license Apache-2.0\n   * @copyright 2021-2023 LiosK\n   * @packageDocumentation\n   *)\n*/  //# sourceMappingURL=chunk-FOHWUNKU.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typeid-js/dist/chunk-FOHWUNKU.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/typeid-js/dist/chunk-R5Q6Z3GN.mjs":
/*!********************************************************!*\
  !*** ./node_modules/typeid-js/dist/chunk-R5Q6Z3GN.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __pow: () => (/* binding */ __pow)\n/* harmony export */ });\nvar __pow = Math.pow;\n //# sourceMappingURL=chunk-R5Q6Z3GN.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdHlwZWlkLWpzL2Rpc3QvY2h1bmstUjVRNlozR04ubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxRQUFRQyxLQUFLQyxHQUFHO0FBSWxCLENBQ0YsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWJjLy4vbm9kZV9tb2R1bGVzL3R5cGVpZC1qcy9kaXN0L2NodW5rLVI1UTZaM0dOLm1qcz8wOWQzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3BvdyA9IE1hdGgucG93O1xuXG5leHBvcnQge1xuICBfX3Bvd1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLVI1UTZaM0dOLm1qcy5tYXAiXSwibmFtZXMiOlsiX19wb3ciLCJNYXRoIiwicG93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/typeid-js/dist/chunk-R5Q6Z3GN.mjs\n");

/***/ })

};
;